name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: debuttend
          POSTGRES_PASSWORD: debuttend
          POSTGRES_DB: debuttend_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run Django system checks
        env:
          DJANGO_SETTINGS_MODULE: debuttend_cms.settings.dev
          DJANGO_SECRET_KEY: test-secret-key-for-ci
          DJANGO_DEBUG: 1
          DJANGO_DB_ENGINE: django.db.backends.postgresql
          DJANGO_DB_NAME: debuttend_test
          DJANGO_DB_USER: debuttend
          DJANGO_DB_PASSWORD: debuttend
          DJANGO_DB_HOST: localhost
          DJANGO_DB_PORT: 5432
        run: |
          cd debuttend_cms
          python manage.py check
      
      - name: Check for missing migrations
        env:
          DJANGO_SETTINGS_MODULE: debuttend_cms.settings.dev
          DJANGO_SECRET_KEY: test-secret-key-for-ci
          DJANGO_DEBUG: 1
          DJANGO_DB_ENGINE: django.db.backends.postgresql
          DJANGO_DB_NAME: debuttend_test
          DJANGO_DB_USER: debuttend
          DJANGO_DB_PASSWORD: debuttend
          DJANGO_DB_HOST: localhost
          DJANGO_DB_PORT: 5432
        run: |
          cd debuttend_cms
          python manage.py makemigrations --check --dry-run --noinput
      
      - name: Run migrations
        env:
          DJANGO_SETTINGS_MODULE: debuttend_cms.settings.dev
          DJANGO_SECRET_KEY: test-secret-key-for-ci
          DJANGO_DEBUG: 1
          DJANGO_DB_ENGINE: django.db.backends.postgresql
          DJANGO_DB_NAME: debuttend_test
          DJANGO_DB_USER: debuttend
          DJANGO_DB_PASSWORD: debuttend
          DJANGO_DB_HOST: localhost
          DJANGO_DB_PORT: 5432
        run: |
          cd debuttend_cms
          python manage.py migrate --noinput
      
      - name: Run Django tests
        env:
          DJANGO_SETTINGS_MODULE: debuttend_cms.settings.dev
          DJANGO_SECRET_KEY: test-secret-key-for-ci
          DJANGO_DEBUG: 1
          DJANGO_DB_ENGINE: django.db.backends.postgresql
          DJANGO_DB_NAME: debuttend_test
          DJANGO_DB_USER: debuttend
          DJANGO_DB_PASSWORD: debuttend
          DJANGO_DB_HOST: localhost
          DJANGO_DB_PORT: 5432
        run: |
          cd debuttend_cms
          python manage.py test --noinput --verbosity=2

  lint:
    name: Lint and Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      
      - name: Run Ruff linter
        run: ruff check .
        continue-on-error: true
      
      - name: Run Ruff formatter check
        run: ruff format --check .
        continue-on-error: true

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install safety bandit[toml]
      
      - name: Run safety check (dependency vulnerabilities)
        run: safety check --json
        continue-on-error: true
      
      - name: Run bandit (security linter)
        run: bandit -r debuttend_cms/ -f json
        continue-on-error: true
      
      - name: Django security check
        env:
          DJANGO_SETTINGS_MODULE: debuttend_cms.settings.dev
          DJANGO_SECRET_KEY: test-secret-key-for-ci
          DJANGO_DEBUG: 1
          DJANGO_DB_ENGINE: django.db.backends.postgresql
          DJANGO_DB_NAME: debuttend_test
          DJANGO_DB_USER: debuttend
          DJANGO_DB_PASSWORD: debuttend
          DJANGO_DB_HOST: localhost
          DJANGO_DB_PORT: 5432
        run: |
          cd debuttend_cms
          python manage.py check --deploy --fail-level WARNING
